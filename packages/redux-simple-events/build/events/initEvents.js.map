{"version":3,"sources":["../../src/events/initEvents.ts"],"names":["allEvents","actionCreatorWrapper","type","action","actionObj","event","eventTemplate","push"],"mappings":";;;;;;;;;;;;;;;;;;;;eAmBe,oBAAkB;AAC/B,MAAMA,SAAkB,GAAG,EAA3B;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD,EAAeC,MAAf,EAAyC;AACpE,WAAO,YAAkC;AACvC,UAAMC,SAAS,GAAGD,MAAM,qBAAOA,MAAM,MAAN,mBAAP,IAA4B,EAApD;AACA,6CACKC,SADL;AAEEF,QAAAA,IAAI,EAAJA;AAFF;AAID,KAND;AAOD,GARD;;AAUA,MAAMG,KAAK,GAAG,eAACC,aAAD,EAAiC;AAAA,QACtCJ,IADsC,GAC9BI,aAD8B,CACtCJ,IADsC;;AAE7C,QAAMG,KAAK,qBAAOC,aAAP,CAAX;;AACAD,IAAAA,KAAK,CAACF,MAAN,GAAeF,oBAAoB,CAACC,IAAD,EAAOG,KAAK,CAACF,MAAb,CAAnC;AACAH,IAAAA,SAAS,CAACO,IAAV,CAAeF,KAAf;AACA,WAAOA,KAAP;AACD,GAND;;AAQA,SAAO;AACL;;;;;;;;;;;;;;;;;;;AAoBAA,IAAAA,KAAK,EAALA,KArBK;;AAsBL;;;AAGAL,IAAAA,SAAS,EAATA;AAzBK,GAAP;AA2BD,C;;AAjED","sourcesContent":["import {Action, ActionCreator, Event} from './types'\n\n/**\n * \"event\" is an object which joins\n * 1) \"redux action type\" constant\n * 2) \"redux action\" itself\n * 3) \"redux reducer\" for this action.\n *\n * returns \"event\" function which will create the event object, based on template.\n * See usages for more details.\n *\n * allEvents array will be filled when event() is called\n */\n\ninterface InitEvents {\n  event: (eventTemplate: Event) => Event\n  allEvents: Event[]\n}\n\nexport default (): InitEvents => {\n  const allEvents: Event[] = []\n\n  const actionCreatorWrapper = (type: string, action: ActionCreator) => {\n    return (...params: unknown[]): Action => {\n      const actionObj = action ? {...action(...params)} : {}\n      return {\n        ...actionObj,\n        type\n      }\n    }\n  }\n\n  const event = (eventTemplate: Event): Event => {\n    const {type} = eventTemplate\n    const event = {...eventTemplate}\n    event.action = actionCreatorWrapper(type, event.action)\n    allEvents.push(event)\n    return event\n  }\n\n  return {\n    /**\n     * Consumes object with type, action and reducer;\n     * {\n                type: 'SAML_CONFIG_PAGE_OPENED',\n                action: (initOperation, initSamlConfigId) => ({\n                    payload: {\n                        initOperation,\n                        initSamlConfigId\n                    }\n                }),\n                reducer: (state) => {\n                    return {\n                        ...state,\n                        loading: true\n                    }\n                }\n            }\n\n     provides object with the same fields which can be already used usual in Redux flows.\n     */\n    event,\n    /**\n     * \"allEvents\" array will be filled when event() is called\n     */\n    allEvents\n  }\n}\n"],"file":"initEvents.js"}