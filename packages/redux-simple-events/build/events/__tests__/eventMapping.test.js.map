{"version":3,"sources":["../../../src/events/__tests__/eventMapping.test.js"],"names":["describe","emptyState","it","reducersMap","testData","expect","Object","keys","length","toEqual","toContain","pageClosedEvent","type","pageOpenedEvent","reducer","opened","undefined"],"mappings":";;AAAA;;AAEA;;AAEAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7B,MAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAM;AAC/D,QAAMC,WAAW,GAAG,uCAAoBC,kBAApB,CAApB;AAEAC,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,MAA1B,CAAN,CAAwCC,OAAxC,CAAgD,CAAhD;AAEAJ,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAD,CAAN,CAAiCO,SAAjC,CAA2CC,0BAAgBC,IAA3D;AACAP,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,CAAD,CAAN,CAAiCO,SAAjC,CAA2CG,0BAAgBD,IAA3D;AAEAP,IAAAA,MAAM,CAACF,WAAW,CAACQ,0BAAgBC,IAAjB,CAAX,CAAkCX,UAAlC,CAAD,CAAN,CAAsDQ,OAAtD,CACEE,0BAAgBG,OAAhB,CAAwBb,UAAxB,CADF;AAIAI,IAAAA,MAAM,CAACF,WAAW,CAACU,0BAAgBD,IAAjB,CAAX,CAAkCX,UAAlC,EAA8Cc,MAA/C,CAAN,CAA6DN,OAA7D,CAAqE,IAArE;AAEAJ,IAAAA,MAAM,CAACF,WAAW,CAACQ,0BAAgBC,IAAjB,CAAX,CAAkCX,UAAlC,EAA8Cc,MAA/C,CAAN,CAA6DN,OAA7D,CAAqE,KAArE;AACD,GAfC,CAAF;AAiBAP,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,QAAMC,WAAW,GAAG,uCAAoBa,SAApB,CAApB;AACAX,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,MAA1B,CAAN,CAAwCC,OAAxC,CAAgD,CAAhD;AACD,GAHC,CAAF;AAKAP,EAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9D,QAAMC,WAAW,GAAG,uCAAoB,EAApB,CAApB;AACAE,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,MAA1B,CAAN,CAAwCC,OAAxC,CAAgD,CAAhD;AACD,GAHC,CAAF;AAID,CA5BO,CAAR","sourcesContent":["import {eventsToReducersMap} from '../eventMapping'\n\nimport {pageClosedEvent, pageOpenedEvent, testData} from './testData'\n\ndescribe('eventMapping', () => {\n  const emptyState = {}\n  it('eventsToReducersMap type->reducer mapping is correct', () => {\n    const reducersMap = eventsToReducersMap(testData)\n\n    expect(Object.keys(reducersMap).length).toEqual(2)\n\n    expect(Object.keys(reducersMap)).toContain(pageClosedEvent.type)\n    expect(Object.keys(reducersMap)).toContain(pageOpenedEvent.type)\n\n    expect(reducersMap[pageClosedEvent.type](emptyState)).toEqual(\n      pageClosedEvent.reducer(emptyState)\n    )\n\n    expect(reducersMap[pageOpenedEvent.type](emptyState).opened).toEqual(true)\n\n    expect(reducersMap[pageClosedEvent.type](emptyState).opened).toEqual(false)\n  })\n\n  it('eventsToReducersMap processes undefined correctly', () => {\n    const reducersMap = eventsToReducersMap(undefined)\n    expect(Object.keys(reducersMap).length).toEqual(0)\n  })\n\n  it('eventsToReducersMap processes empty array correctly', () => {\n    const reducersMap = eventsToReducersMap([])\n    expect(Object.keys(reducersMap).length).toEqual(0)\n  })\n})\n"],"file":"eventMapping.test.js"}